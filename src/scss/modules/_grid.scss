
$grid-columns: 12 !default;

$breakpoints: (
  xs: 400px,
  s: 600px,
  m: 768px,
  l: 992px,
  xl: 1200px
);

@mixin respond-to($name) {
  // If the key exists in the map
  @if map-has-key($breakpoints, $name) {
    // Prints a media query based on the value
    @media (min-width: #{inspect(map-get($breakpoints, $name))}) {
      @content;
    }
  }

  // If the key doesn't exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Please make sure it is defined in `$breakpoints` map.";
  }
}

@for $i from 1 through $grid-columns {
  .grid-#{$i} {
    width: 100% / $grid-columns * $i;
  }

  @include respond-to(l) {
    .grid-#{$i} {
      width: 100% / $grid-columns * $i - 1%;
    }
  }
}

@mixin flexbox {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

@mixin flex-wrap($value) {
  @if $value == wrap {
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
  }
  @if $value == nowrap {
    -webkit-flex-wrap: nowrap;
    -ms-flex-wrap: nowrap;
    flex-wrap: nowrap;
  }
}

@mixin flex-direction($value) {
  @if $value == column {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
  @else if $value == row {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
  @else {
    @warn "The value must be either row or column";
  }
}

@mixin justify-content($value) {
  @if $value == space-between {
    -webkit-box-pack: justify;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
  }
  @if $value == center {
    -webkit-box-pack: center;
    -webkit-justify-content: center;
    -ms-flex-pack: center;
    justify-content: center;
  }
}

@mixin align-items($value) {
  @if $value == center {
    -webkit-box-align: center;
    -webkit-align-items: center;
    -ms-flex-align: center;
    align-items: center;
  }
  @if $value == start {
    -webkit-box-align: start;
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
  }
  @if $value == end {
    -webkit-box-align: end;
    -webkit-align-items: flex-end;
    -ms-flex-align: end;
    align-items: flex-end;
  }
}

@mixin grid($wrap, $direction, $justify) {
  @include flexbox;
  @include flex-wrap($wrap);
  @include flex-direction($direction);
  @include justify-content($justify);
}
